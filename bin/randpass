#!/usr/bin/env bash
# shellcheck source-path=..

randpass() {
  local pkgroot; pkgroot=$(realpath "$(dirname "$(realpath "${BASH_SOURCE[0]}")")/..")

  DOC="Generate a random password
Usage:
  randpass [options]

Options:
  -l --length=N  Length of the password [default: 6]"
# docopt parser below, refresh this parser with `docopt.sh randpass`
# shellcheck disable=2016,2086,2317,1090,1091,2034
docopt() { source "$pkgroot/.upkg/docopt-lib.sh/docopt-lib.sh" '2.0.0' || {
ret=$?;printf -- "exit %d\n" "$ret";exit "$ret";};set -e
trimmed_doc=${DOC:0:117};usage=${DOC:27:27};digest=f28ee;options=('-l --length'\
' 1');node_0(){ value __length 0;};node_1(){ optional 0;};cat <<<' \
docopt_exit() { [[ -n $1 ]] && printf "%s\n" "$1" >&2;printf "%s\n" \
"${DOC:27:27}" >&2;exit 1;}';local varnames=(__length) varname;for varname in \
"${varnames[@]}"; do unset "var_$varname";done;parse 1 "$@";local \
p=${DOCOPT_PREFIX:-''};for varname in "${varnames[@]}"; do unset "$p$varname"
done;eval $p'__length=${var___length:-6};';local docopt_i=1;[[ $BASH_VERSION \
=~ ^4.3 ]] && docopt_i=2;for ((;docopt_i>0;docopt_i--)); do for varname in \
"${varnames[@]}"; do declare -p "$p$varname";done;done;}
# docopt parser above, complete command for generating this parser is `docopt.sh --library='"$pkgroot/.upkg/docopt-lib.sh/docopt-lib.sh"' randpass`
  eval "$(docopt "$@")"
  # shellcheck disable=SC2154
  printf "%s\n" "$(LC_ALL=C tr -dc A-Za-z0-9 < /dev/urandom | head -c"$__length")"
}

randpass "$@"
